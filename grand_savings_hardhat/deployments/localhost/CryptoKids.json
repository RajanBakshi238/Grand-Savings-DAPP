{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "contractBalance",
          "type": "uint256"
        }
      ],
      "name": "LogKidFundingReceived",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "firstName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lastName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canWithdraw",
          "type": "bool"
        }
      ],
      "name": "addKid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "availableToWithdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllKids",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "walletAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "firstName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lastName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "releaseTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "canWithdraw",
              "type": "bool"
            }
          ],
          "internalType": "struct CryptoKids.Kid[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "kids",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "firstName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lastName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canWithdraw",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6a4f37c8d911f0503734dc533c5a8bd5ac0f2a18c30f6ffb0d0e28d42dbe2f10",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1346593",
    "logsBloom": "0x
    "blockHash": "0x79e119ba524dd7008d923703c09564ce8f8a714e108316e7a584853871e01d60",
    "transactionHash": "0x6a4f37c8d911f0503734dc533c5a8bd5ac0f2a18c30f6ffb0d0e28d42dbe2f10",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1346593",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "53ba1ed4676dddcb65f3f5055cae7cc1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"LogKidFundingReceived\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canWithdraw\",\"type\":\"bool\"}],\"name\":\"addKid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"availableToWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllKids\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canWithdraw\",\"type\":\"bool\"}],\"internalType\":\"struct CryptoKids.Kid[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"kids\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canWithdraw\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CryptoKids.sol\":\"CryptoKids\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CryptoKids.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\r\\n\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\ncontract CryptoKids {\\r\\n    // owner DAD\\r\\n    address owner;\\r\\n\\r\\n    // event defined\\r\\n    event LogKidFundingReceived(\\r\\n        address addr,\\r\\n        uint amount,\\r\\n        uint contractBalance\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    // define KID\\r\\n    struct Kid {\\r\\n        address payable walletAddress;\\r\\n        string firstName;\\r\\n        string lastName;\\r\\n        uint releaseTime;\\r\\n        uint amount;\\r\\n        bool canWithdraw;\\r\\n    }\\r\\n\\r\\n    Kid[] public kids;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Only the owner can add kids\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // add kid to contract\\r\\n    function addKid(\\r\\n        address payable walletAddress,\\r\\n        string memory firstName,\\r\\n        string memory lastName,\\r\\n        uint releaseTime,\\r\\n        uint amount,\\r\\n        bool canWithdraw\\r\\n    ) public onlyOwner {\\r\\n        kids.push(\\r\\n            Kid(\\r\\n                walletAddress,\\r\\n                firstName,\\r\\n                lastName,\\r\\n                releaseTime,\\r\\n                amount,\\r\\n                canWithdraw\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function balanceOf() public view returns (uint) {\\r\\n        return address(this).balance; // Herethis refer to the current contrcat\\r\\n    }\\r\\n\\r\\n    // deposit funds to contract, specially to a kid's account\\r\\n    function deposit(address walletAddress) public payable {\\r\\n        addToKidsBalance(walletAddress);\\r\\n    }\\r\\n\\r\\n    function addToKidsBalance(address walletAddress) private {\\r\\n        for (uint i = 0; i < kids.length; i++) {\\r\\n            if (kids[i].walletAddress == walletAddress) {\\r\\n                kids[i].amount += msg.value;\\r\\n                emit LogKidFundingReceived(\\r\\n                    walletAddress,\\r\\n                    msg.value,\\r\\n                    balanceOf()\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n        // recomended not to use loop if data is more as it is not gas efficient\\r\\n    }\\r\\n\\r\\n    function getIndex(address walletAddress) private view returns (uint) {\\r\\n        for (uint i = 0; i < kids.length; i++) {\\r\\n            if (kids[i].walletAddress == walletAddress) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n        return 999; // not a good solution but quick fix\\r\\n    }\\r\\n\\r\\n    // kid checks if able to withdraw\\r\\n    function availableToWithdraw(address walletAddress) public returns (bool) {\\r\\n        uint i = getIndex(walletAddress);\\r\\n\\r\\n        require(\\r\\n            block.timestamp > kids[i].releaseTime,\\r\\n            \\\"You cannot withdraw yet.\\\"\\r\\n        );\\r\\n\\r\\n        // if its a time in with in next 15 minute before or after 15 minutes then no use this---> here timestamp is long so manipulation will not effect.\\r\\n        if (block.timestamp > kids[i].releaseTime) {\\r\\n            kids[i].canWithdraw = true;\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // withdraw money\\r\\n    function withdraw(address payable walletAddress) public payable {\\r\\n        uint i = getIndex(walletAddress);\\r\\n        require(\\r\\n            msg.sender == kids[i].walletAddress,\\r\\n            \\\"You must be the kid to withdraw\\\"\\r\\n        );\\r\\n        require(\\r\\n            kids[i].canWithdraw == true,\\r\\n            \\\"You are not able to withdraw at this time\\\"\\r\\n        );\\r\\n        kids[i].walletAddress.transfer(kids[i].amount);\\r\\n    }\\r\\n\\r\\n    function getAllKids() public view returns(Kid[] memory){\\r\\n        return kids;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n// NOTES :\\r\\n// msg is a global variable\\r\\n\\r\\n// epochconverter.com\\r\\n\\r\\n// learn x in y solidity.\\r\\n\",\"keccak256\":\"0x40d1b35047b8da2a9efc599d7f7fa52d9d57f3d53da04f24c50c4c88aedfea2a\",\"license\":\"Unlicensed\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061170c806100606000396000f3fe6080604052600436106100705760003560e01c8063722713f71161004e578063722713f7146100e55780637285fd3a14610110578063a25db8ce14610152578063f340fa011461018f57610070565b806331d575c514610075578063380e37aa1461009e57806351cff8d9146100c9575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610d85565b6101ab565b005b3480156100aa57600080fd5b506100b3610368565b6040516100c0919061119d565b60405180910390f35b6100e360048036038101906100de9190610d58565b610570565b005b3480156100f157600080fd5b506100fa61075e565b604051610107919061125a565b60405180910390f35b34801561011c57600080fd5b5061013760048036038101906101329190610e4a565b610766565b604051610149969594939291906110f7565b60405180910390f35b34801561015e57600080fd5b5061017960048036038101906101749190610d2b565b6108ef565b60405161018691906111bf565b60405180910390f35b6101a960048036038101906101a49190610d2b565b6109e3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610239576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610230906111fa565b60405180910390fd5b60016040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152602001858152602001848152602001831515815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061030c929190610bc4565b506040820151816002019080519060200190610329929190610bc4565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055505050505050505050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561056757838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461041590611423565b80601f016020809104026020016040519081016040528092919081815260200182805461044190611423565b801561048e5780601f106104635761010080835404028352916020019161048e565b820191906000526020600020905b81548152906001019060200180831161047157829003601f168201915b505050505081526020016002820180546104a790611423565b80601f01602080910402602001604051908101604052809291908181526020018280546104d390611423565b80156105205780601f106104f557610100808354040283529160200191610520565b820191906000526020600020905b81548152906001019060200180831161050357829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250508152602001906001019061038c565b50505050905090565b600061057b826109ef565b9050600181815481106105915761059061152d565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610630576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106279061121a565b60405180910390fd5b60011515600182815481106106485761064761152d565b5b906000526020600020906006020160050160009054906101000a900460ff161515146106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a0906111da565b60405180910390fd5b600181815481106106bd576106bc61152d565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001838154811061071c5761071b61152d565b5b9060005260206000209060060201600401549081150290604051600060405180830381858888f19350505050158015610759573d6000803e3d6000fd5b505050565b600047905090565b6001818154811061077657600080fd5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546107bf90611423565b80601f01602080910402602001604051908101604052809291908181526020018280546107eb90611423565b80156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b50505050509080600201805461084d90611423565b80601f016020809104026020016040519081016040528092919081815260200182805461087990611423565b80156108c65780601f1061089b576101008083540402835291602001916108c6565b820191906000526020600020905b8154815290600101906020018083116108a957829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16905086565b6000806108fb836109ef565b9050600181815481106109115761091061152d565b5b9060005260206000209060060201600301544211610964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095b9061123a565b60405180910390fd5b600181815481106109785761097761152d565b5b9060005260206000209060060201600301544211156109d85760018082815481106109a6576109a561152d565b5b906000526020600020906006020160050160006101000a81548160ff02191690831515021790555060019150506109de565b60009150505b919050565b6109ec81610aa5565b50565b600080600090505b600180549050811015610a99578273ffffffffffffffffffffffffffffffffffffffff1660018281548110610a2f57610a2e61152d565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a865780915050610aa0565b8080610a9190611486565b9150506109f7565b506103e790505b919050565b60005b600180549050811015610bc0578173ffffffffffffffffffffffffffffffffffffffff1660018281548110610ae057610adf61152d565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bad573460018281548110610b4357610b4261152d565b5b90600052602060002090600602016004016000828254610b639190611331565b925050819055507fdfa390b0c1c515579c441209b0f88953b3383e444305380136073b84d9ae5eaf8234610b9561075e565b604051610ba493929190611166565b60405180910390a15b8080610bb890611486565b915050610aa8565b5050565b828054610bd090611423565b90600052602060002090601f016020900481019282610bf25760008555610c39565b82601f10610c0b57805160ff1916838001178555610c39565b82800160010185558215610c39579182015b82811115610c38578251825591602001919060010190610c1d565b5b509050610c469190610c4a565b5090565b5b80821115610c63576000816000905550600101610c4b565b5090565b6000610c7a610c758461129a565b611275565b905082815260208101848484011115610c9657610c95611590565b5b610ca18482856113e1565b509392505050565b600081359050610cb88161167a565b92915050565b600081359050610ccd81611691565b92915050565b600081359050610ce2816116a8565b92915050565b600082601f830112610cfd57610cfc61158b565b5b8135610d0d848260208601610c67565b91505092915050565b600081359050610d25816116bf565b92915050565b600060208284031215610d4157610d4061159a565b5b6000610d4f84828501610ca9565b91505092915050565b600060208284031215610d6e57610d6d61159a565b5b6000610d7c84828501610cbe565b91505092915050565b60008060008060008060c08789031215610da257610da161159a565b5b6000610db089828a01610cbe565b965050602087013567ffffffffffffffff811115610dd157610dd0611595565b5b610ddd89828a01610ce8565b955050604087013567ffffffffffffffff811115610dfe57610dfd611595565b5b610e0a89828a01610ce8565b9450506060610e1b89828a01610d16565b9350506080610e2c89828a01610d16565b92505060a0610e3d89828a01610cd3565b9150509295509295509295565b600060208284031215610e6057610e5f61159a565b5b6000610e6e84828501610d16565b91505092915050565b6000610e838383611049565b905092915050565b610e9481611399565b82525050565b610ea381611399565b82525050565b610eb281611387565b82525050565b6000610ec3826112db565b610ecd81856112fe565b935083602082028501610edf856112cb565b8060005b85811015610f1b5784840389528151610efc8582610e77565b9450610f07836112f1565b925060208a01995050600181019050610ee3565b50829750879550505050505092915050565b610f36816113ab565b82525050565b610f45816113ab565b82525050565b6000610f56826112e6565b610f60818561130f565b9350610f708185602086016113f0565b610f798161159f565b840191505092915050565b6000610f8f826112e6565b610f998185611320565b9350610fa98185602086016113f0565b610fb28161159f565b840191505092915050565b6000610fca602983611320565b9150610fd5826115b0565b604082019050919050565b6000610fed601b83611320565b9150610ff8826115ff565b602082019050919050565b6000611010601f83611320565b915061101b82611628565b602082019050919050565b6000611033601883611320565b915061103e82611651565b602082019050919050565b600060c0830160008301516110616000860182610e8b565b50602083015184820360208601526110798282610f4b565b915050604083015184820360408601526110938282610f4b565b91505060608301516110a860608601826110d9565b5060808301516110bb60808601826110d9565b5060a08301516110ce60a0860182610f2d565b508091505092915050565b6110e2816113d7565b82525050565b6110f1816113d7565b82525050565b600060c08201905061110c6000830189610e9a565b818103602083015261111e8188610f84565b905081810360408301526111328187610f84565b905061114160608301866110e8565b61114e60808301856110e8565b61115b60a0830184610f3c565b979650505050505050565b600060608201905061117b6000830186610ea9565b61118860208301856110e8565b61119560408301846110e8565b949350505050565b600060208201905081810360008301526111b78184610eb8565b905092915050565b60006020820190506111d46000830184610f3c565b92915050565b600060208201905081810360008301526111f381610fbd565b9050919050565b6000602082019050818103600083015261121381610fe0565b9050919050565b6000602082019050818103600083015261123381611003565b9050919050565b6000602082019050818103600083015261125381611026565b9050919050565b600060208201905061126f60008301846110e8565b92915050565b600061127f611290565b905061128b8282611455565b919050565b6000604051905090565b600067ffffffffffffffff8211156112b5576112b461155c565b5b6112be8261159f565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061133c826113d7565b9150611347836113d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561137c5761137b6114cf565b5b828201905092915050565b6000611392826113b7565b9050919050565b60006113a4826113b7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561140e5780820151818401526020810190506113f3565b8381111561141d576000848401525b50505050565b6000600282049050600182168061143b57607f821691505b6020821081141561144f5761144e6114fe565b5b50919050565b61145e8261159f565b810181811067ffffffffffffffff8211171561147d5761147c61155c565b5b80604052505050565b6000611491826113d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114c4576114c36114cf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f596f7520617265206e6f742061626c6520746f2077697468647261772061742060008201527f746869732074696d650000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e20616464206b6964730000000000600082015250565b7f596f75206d75737420626520746865206b696420746f20776974686472617700600082015250565b7f596f752063616e6e6f74207769746864726177207965742e0000000000000000600082015250565b61168381611387565b811461168e57600080fd5b50565b61169a81611399565b81146116a557600080fd5b50565b6116b1816113ab565b81146116bc57600080fd5b50565b6116c8816113d7565b81146116d357600080fd5b5056fea26469706673582212209c8bd600e89b976782d5187cb083c503f2c8f6f4e14b11911b1349fcfa1160eb64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063722713f71161004e578063722713f7146100e55780637285fd3a14610110578063a25db8ce14610152578063f340fa011461018f57610070565b806331d575c514610075578063380e37aa1461009e57806351cff8d9146100c9575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610d85565b6101ab565b005b3480156100aa57600080fd5b506100b3610368565b6040516100c0919061119d565b60405180910390f35b6100e360048036038101906100de9190610d58565b610570565b005b3480156100f157600080fd5b506100fa61075e565b604051610107919061125a565b60405180910390f35b34801561011c57600080fd5b5061013760048036038101906101329190610e4a565b610766565b604051610149969594939291906110f7565b60405180910390f35b34801561015e57600080fd5b5061017960048036038101906101749190610d2b565b6108ef565b60405161018691906111bf565b60405180910390f35b6101a960048036038101906101a49190610d2b565b6109e3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610239576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610230906111fa565b60405180910390fd5b60016040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152602001858152602001848152602001831515815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061030c929190610bc4565b506040820151816002019080519060200190610329929190610bc4565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055505050505050505050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561056757838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461041590611423565b80601f016020809104026020016040519081016040528092919081815260200182805461044190611423565b801561048e5780601f106104635761010080835404028352916020019161048e565b820191906000526020600020905b81548152906001019060200180831161047157829003601f168201915b505050505081526020016002820180546104a790611423565b80601f01602080910402602001604051908101604052809291908181526020018280546104d390611423565b80156105205780601f106104f557610100808354040283529160200191610520565b820191906000526020600020905b81548152906001019060200180831161050357829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250508152602001906001019061038c565b50505050905090565b600061057b826109ef565b9050600181815481106105915761059061152d565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610630576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106279061121a565b60405180910390fd5b60011515600182815481106106485761064761152d565b5b906000526020600020906006020160050160009054906101000a900460ff161515146106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a0906111da565b60405180910390fd5b600181815481106106bd576106bc61152d565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001838154811061071c5761071b61152d565b5b9060005260206000209060060201600401549081150290604051600060405180830381858888f19350505050158015610759573d6000803e3d6000fd5b505050565b600047905090565b6001818154811061077657600080fd5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546107bf90611423565b80601f01602080910402602001604051908101604052809291908181526020018280546107eb90611423565b80156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b50505050509080600201805461084d90611423565b80601f016020809104026020016040519081016040528092919081815260200182805461087990611423565b80156108c65780601f1061089b576101008083540402835291602001916108c6565b820191906000526020600020905b8154815290600101906020018083116108a957829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16905086565b6000806108fb836109ef565b9050600181815481106109115761091061152d565b5b9060005260206000209060060201600301544211610964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095b9061123a565b60405180910390fd5b600181815481106109785761097761152d565b5b9060005260206000209060060201600301544211156109d85760018082815481106109a6576109a561152d565b5b906000526020600020906006020160050160006101000a81548160ff02191690831515021790555060019150506109de565b60009150505b919050565b6109ec81610aa5565b50565b600080600090505b600180549050811015610a99578273ffffffffffffffffffffffffffffffffffffffff1660018281548110610a2f57610a2e61152d565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a865780915050610aa0565b8080610a9190611486565b9150506109f7565b506103e790505b919050565b60005b600180549050811015610bc0578173ffffffffffffffffffffffffffffffffffffffff1660018281548110610ae057610adf61152d565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bad573460018281548110610b4357610b4261152d565b5b90600052602060002090600602016004016000828254610b639190611331565b925050819055507fdfa390b0c1c515579c441209b0f88953b3383e444305380136073b84d9ae5eaf8234610b9561075e565b604051610ba493929190611166565b60405180910390a15b8080610bb890611486565b915050610aa8565b5050565b828054610bd090611423565b90600052602060002090601f016020900481019282610bf25760008555610c39565b82601f10610c0b57805160ff1916838001178555610c39565b82800160010185558215610c39579182015b82811115610c38578251825591602001919060010190610c1d565b5b509050610c469190610c4a565b5090565b5b80821115610c63576000816000905550600101610c4b565b5090565b6000610c7a610c758461129a565b611275565b905082815260208101848484011115610c9657610c95611590565b5b610ca18482856113e1565b509392505050565b600081359050610cb88161167a565b92915050565b600081359050610ccd81611691565b92915050565b600081359050610ce2816116a8565b92915050565b600082601f830112610cfd57610cfc61158b565b5b8135610d0d848260208601610c67565b91505092915050565b600081359050610d25816116bf565b92915050565b600060208284031215610d4157610d4061159a565b5b6000610d4f84828501610ca9565b91505092915050565b600060208284031215610d6e57610d6d61159a565b5b6000610d7c84828501610cbe565b91505092915050565b60008060008060008060c08789031215610da257610da161159a565b5b6000610db089828a01610cbe565b965050602087013567ffffffffffffffff811115610dd157610dd0611595565b5b610ddd89828a01610ce8565b955050604087013567ffffffffffffffff811115610dfe57610dfd611595565b5b610e0a89828a01610ce8565b9450506060610e1b89828a01610d16565b9350506080610e2c89828a01610d16565b92505060a0610e3d89828a01610cd3565b9150509295509295509295565b600060208284031215610e6057610e5f61159a565b5b6000610e6e84828501610d16565b91505092915050565b6000610e838383611049565b905092915050565b610e9481611399565b82525050565b610ea381611399565b82525050565b610eb281611387565b82525050565b6000610ec3826112db565b610ecd81856112fe565b935083602082028501610edf856112cb565b8060005b85811015610f1b5784840389528151610efc8582610e77565b9450610f07836112f1565b925060208a01995050600181019050610ee3565b50829750879550505050505092915050565b610f36816113ab565b82525050565b610f45816113ab565b82525050565b6000610f56826112e6565b610f60818561130f565b9350610f708185602086016113f0565b610f798161159f565b840191505092915050565b6000610f8f826112e6565b610f998185611320565b9350610fa98185602086016113f0565b610fb28161159f565b840191505092915050565b6000610fca602983611320565b9150610fd5826115b0565b604082019050919050565b6000610fed601b83611320565b9150610ff8826115ff565b602082019050919050565b6000611010601f83611320565b915061101b82611628565b602082019050919050565b6000611033601883611320565b915061103e82611651565b602082019050919050565b600060c0830160008301516110616000860182610e8b565b50602083015184820360208601526110798282610f4b565b915050604083015184820360408601526110938282610f4b565b91505060608301516110a860608601826110d9565b5060808301516110bb60808601826110d9565b5060a08301516110ce60a0860182610f2d565b508091505092915050565b6110e2816113d7565b82525050565b6110f1816113d7565b82525050565b600060c08201905061110c6000830189610e9a565b818103602083015261111e8188610f84565b905081810360408301526111328187610f84565b905061114160608301866110e8565b61114e60808301856110e8565b61115b60a0830184610f3c565b979650505050505050565b600060608201905061117b6000830186610ea9565b61118860208301856110e8565b61119560408301846110e8565b949350505050565b600060208201905081810360008301526111b78184610eb8565b905092915050565b60006020820190506111d46000830184610f3c565b92915050565b600060208201905081810360008301526111f381610fbd565b9050919050565b6000602082019050818103600083015261121381610fe0565b9050919050565b6000602082019050818103600083015261123381611003565b9050919050565b6000602082019050818103600083015261125381611026565b9050919050565b600060208201905061126f60008301846110e8565b92915050565b600061127f611290565b905061128b8282611455565b919050565b6000604051905090565b600067ffffffffffffffff8211156112b5576112b461155c565b5b6112be8261159f565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061133c826113d7565b9150611347836113d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561137c5761137b6114cf565b5b828201905092915050565b6000611392826113b7565b9050919050565b60006113a4826113b7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561140e5780820151818401526020810190506113f3565b8381111561141d576000848401525b50505050565b6000600282049050600182168061143b57607f821691505b6020821081141561144f5761144e6114fe565b5b50919050565b61145e8261159f565b810181811067ffffffffffffffff8211171561147d5761147c61155c565b5b80604052505050565b6000611491826113d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114c4576114c36114cf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f596f7520617265206e6f742061626c6520746f2077697468647261772061742060008201527f746869732074696d650000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e20616464206b6964730000000000600082015250565b7f596f75206d75737420626520746865206b696420746f20776974686472617700600082015250565b7f596f752063616e6e6f74207769746864726177207965742e0000000000000000600082015250565b61168381611387565b811461168e57600080fd5b50565b61169a81611399565b81146116a557600080fd5b50565b6116b1816113ab565b81146116bc57600080fd5b50565b6116c8816113d7565b81146116d357600080fd5b5056fea26469706673582212209c8bd600e89b976782d5187cb083c503f2c8f6f4e14b11911b1349fcfa1160eb64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/CryptoKids.sol:CryptoKids",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 37,
        "contract": "contracts/CryptoKids.sol:CryptoKids",
        "label": "kids",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Kid)33_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Kid)33_storage)dyn_storage": {
        "base": "t_struct(Kid)33_storage",
        "encoding": "dynamic_array",
        "label": "struct CryptoKids.Kid[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Kid)33_storage": {
        "encoding": "inplace",
        "label": "struct CryptoKids.Kid",
        "members": [
          {
            "astId": 22,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "walletAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 24,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "firstName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 26,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "lastName",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 28,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "releaseTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 30,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "amount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "canWithdraw",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}