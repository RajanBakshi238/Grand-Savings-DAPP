{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "contractBalance",
          "type": "uint256"
        }
      ],
      "name": "LogKidFundingReceived",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "firstName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lastName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canWithdraw",
          "type": "bool"
        }
      ],
      "name": "addKid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "availableToWithdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "kids",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "firstName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lastName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canWithdraw",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc4056c689e02816a706b7aad8792de7b577e24563b1a95e9f1c2b5c40e1f56ee",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1113243",
    "logsBloom": "0x
    "blockHash": "0x94da2d7e342e7a1e221a3b320dd515ed93398a91b814e7f34b80b448bf597db6",
    "transactionHash": "0xc4056c689e02816a706b7aad8792de7b577e24563b1a95e9f1c2b5c40e1f56ee",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1113243",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b940bdb06381b526a15a1b99f0102a0d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"LogKidFundingReceived\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canWithdraw\",\"type\":\"bool\"}],\"name\":\"addKid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"availableToWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"kids\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canWithdraw\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CryptoKids.sol\":\"CryptoKids\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CryptoKids.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\r\\n\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\ncontract CryptoKids {\\r\\n    // owner DAD\\r\\n    address owner;\\r\\n\\r\\n    // event defined\\r\\n    event LogKidFundingReceived(\\r\\n        address addr,\\r\\n        uint amount,\\r\\n        uint contractBalance\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    // define KID\\r\\n    struct Kid {\\r\\n        address payable walletAddress;\\r\\n        string firstName;\\r\\n        string lastName;\\r\\n        uint releaseTime;\\r\\n        uint amount;\\r\\n        bool canWithdraw;\\r\\n    }\\r\\n\\r\\n    Kid[] public kids;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Only the owner can add kids\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // add kid to contract\\r\\n    function addKid(\\r\\n        address payable walletAddress,\\r\\n        string memory firstName,\\r\\n        string memory lastName,\\r\\n        uint releaseTime,\\r\\n        uint amount,\\r\\n        bool canWithdraw\\r\\n    ) public onlyOwner {\\r\\n        kids.push(\\r\\n            Kid(\\r\\n                walletAddress,\\r\\n                firstName,\\r\\n                lastName,\\r\\n                releaseTime,\\r\\n                amount,\\r\\n                canWithdraw\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function balanceOf() public view returns (uint) {\\r\\n        return address(this).balance; // Herethis refer to the current contrcat\\r\\n    }\\r\\n\\r\\n    // deposit funds to contract, specially to a kid's account\\r\\n    function deposit(address walletAddress) public payable {\\r\\n        addToKidsBalance(walletAddress);\\r\\n    }\\r\\n\\r\\n    function addToKidsBalance(address walletAddress) private {\\r\\n        for (uint i = 0; i < kids.length; i++) {\\r\\n            if (kids[i].walletAddress == walletAddress) {\\r\\n                kids[i].amount += msg.value;\\r\\n                emit LogKidFundingReceived(\\r\\n                    walletAddress,\\r\\n                    msg.value,\\r\\n                    balanceOf()\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n        // recomended not to use loop if data is more as it is not gas efficient\\r\\n    }\\r\\n\\r\\n    function getIndex(address walletAddress) private view returns (uint) {\\r\\n        for (uint i = 0; i < kids.length; i++) {\\r\\n            if (kids[i].walletAddress == walletAddress) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n        return 999; // not a good solution but quick fix\\r\\n    }\\r\\n\\r\\n    // kid checks if able to withdraw\\r\\n    function availableToWithdraw(address walletAddress) public returns (bool) {\\r\\n        uint i = getIndex(walletAddress);\\r\\n\\r\\n        require(\\r\\n            block.timestamp > kids[i].releaseTime,\\r\\n            \\\"You cannot withdraw yet.\\\"\\r\\n        );\\r\\n\\r\\n        // if its a time in with in next 15 minute before or after 15 minutes then no use this---> here timestamp is long so manipulation will not effect.\\r\\n        if (block.timestamp > kids[i].releaseTime) {\\r\\n            kids[i].canWithdraw = true;\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // withdraw money\\r\\n    function withdraw(address payable walletAddress) public payable {\\r\\n        uint i = getIndex(walletAddress);\\r\\n        require(\\r\\n            msg.sender == kids[i].walletAddress,\\r\\n            \\\"You must be the kid to withdraw\\\"\\r\\n        );\\r\\n        require(\\r\\n            kids[i].canWithdraw == true,\\r\\n            \\\"You are not able to withdraw at this time\\\"\\r\\n        );\\r\\n        kids[i].walletAddress.transfer(kids[i].amount);\\r\\n    }\\r\\n}\\r\\n\\r\\n// NOTES :\\r\\n// msg is a global variable\\r\\n\\r\\n// epochconverter.com\\r\\n\\r\\n// learn x in y solidity.\\r\\n\",\"keccak256\":\"0x4787761a7f82b2226d3be605075fd488389e9e3f25ec2d64c5f76d8f8491c380\",\"license\":\"Unlicensed\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112d3806100606000396000f3fe6080604052600436106100555760003560e01c806331d575c51461005a57806351cff8d914610083578063722713f71461009f5780637285fd3a146100ca578063a25db8ce1461010c578063f340fa0114610149575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610b37565b610165565b005b61009d60048036038101906100989190610b0a565b610322565b005b3480156100ab57600080fd5b506100b4610510565b6040516100c19190610e6b565b60405180910390f35b3480156100d657600080fd5b506100f160048036038101906100ec9190610bfc565b610518565b60405161010396959493929190610d2a565b60405180910390f35b34801561011857600080fd5b50610133600480360381019061012e9190610add565b6106a1565b6040516101409190610dd0565b60405180910390f35b610163600480360381019061015e9190610add565b610795565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ea90610e0b565b60405180910390fd5b60016040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152602001858152602001848152602001831515815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906102c6929190610976565b5060408201518160020190805190602001906102e3929190610976565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055505050505050505050565b600061032d826107a1565b905060018181548110610343576103426110f4565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d990610e2b565b60405180910390fd5b60011515600182815481106103fa576103f96110f4565b5b906000526020600020906006020160050160009054906101000a900460ff1615151461045b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045290610deb565b60405180910390fd5b6001818154811061046f5761046e6110f4565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600183815481106104ce576104cd6110f4565b5b9060005260206000209060060201600401549081150290604051600060405180830381858888f1935050505015801561050b573d6000803e3d6000fd5b505050565b600047905090565b6001818154811061052857600080fd5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461057190610fea565b80601f016020809104026020016040519081016040528092919081815260200182805461059d90610fea565b80156105ea5780601f106105bf576101008083540402835291602001916105ea565b820191906000526020600020905b8154815290600101906020018083116105cd57829003601f168201915b5050505050908060020180546105ff90610fea565b80601f016020809104026020016040519081016040528092919081815260200182805461062b90610fea565b80156106785780601f1061064d57610100808354040283529160200191610678565b820191906000526020600020905b81548152906001019060200180831161065b57829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16905086565b6000806106ad836107a1565b9050600181815481106106c3576106c26110f4565b5b9060005260206000209060060201600301544211610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d90610e4b565b60405180910390fd5b6001818154811061072a576107296110f4565b5b90600052602060002090600602016003015442111561078a576001808281548110610758576107576110f4565b5b906000526020600020906006020160050160006101000a81548160ff0219169083151502179055506001915050610790565b60009150505b919050565b61079e81610857565b50565b600080600090505b60018054905081101561084b578273ffffffffffffffffffffffffffffffffffffffff16600182815481106107e1576107e06110f4565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108385780915050610852565b80806108439061104d565b9150506107a9565b506103e790505b919050565b60005b600180549050811015610972578173ffffffffffffffffffffffffffffffffffffffff1660018281548110610892576108916110f4565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561095f5734600182815481106108f5576108f46110f4565b5b906000526020600020906006020160040160008282546109159190610ef8565b925050819055507fdfa390b0c1c515579c441209b0f88953b3383e444305380136073b84d9ae5eaf8234610947610510565b60405161095693929190610d99565b60405180910390a15b808061096a9061104d565b91505061085a565b5050565b82805461098290610fea565b90600052602060002090601f0160209004810192826109a457600085556109eb565b82601f106109bd57805160ff19168380011785556109eb565b828001600101855582156109eb579182015b828111156109ea5782518255916020019190600101906109cf565b5b5090506109f891906109fc565b5090565b5b80821115610a155760008160009055506001016109fd565b5090565b6000610a2c610a2784610eab565b610e86565b905082815260208101848484011115610a4857610a47611157565b5b610a53848285610fa8565b509392505050565b600081359050610a6a81611241565b92915050565b600081359050610a7f81611258565b92915050565b600081359050610a948161126f565b92915050565b600082601f830112610aaf57610aae611152565b5b8135610abf848260208601610a19565b91505092915050565b600081359050610ad781611286565b92915050565b600060208284031215610af357610af2611161565b5b6000610b0184828501610a5b565b91505092915050565b600060208284031215610b2057610b1f611161565b5b6000610b2e84828501610a70565b91505092915050565b60008060008060008060c08789031215610b5457610b53611161565b5b6000610b6289828a01610a70565b965050602087013567ffffffffffffffff811115610b8357610b8261115c565b5b610b8f89828a01610a9a565b955050604087013567ffffffffffffffff811115610bb057610baf61115c565b5b610bbc89828a01610a9a565b9450506060610bcd89828a01610ac8565b9350506080610bde89828a01610ac8565b92505060a0610bef89828a01610a85565b9150509295509295509295565b600060208284031215610c1257610c11611161565b5b6000610c2084828501610ac8565b91505092915050565b610c3281610f60565b82525050565b610c4181610f4e565b82525050565b610c5081610f72565b82525050565b6000610c6182610edc565b610c6b8185610ee7565b9350610c7b818560208601610fb7565b610c8481611166565b840191505092915050565b6000610c9c602983610ee7565b9150610ca782611177565b604082019050919050565b6000610cbf601b83610ee7565b9150610cca826111c6565b602082019050919050565b6000610ce2601f83610ee7565b9150610ced826111ef565b602082019050919050565b6000610d05601883610ee7565b9150610d1082611218565b602082019050919050565b610d2481610f9e565b82525050565b600060c082019050610d3f6000830189610c29565b8181036020830152610d518188610c56565b90508181036040830152610d658187610c56565b9050610d746060830186610d1b565b610d816080830185610d1b565b610d8e60a0830184610c47565b979650505050505050565b6000606082019050610dae6000830186610c38565b610dbb6020830185610d1b565b610dc86040830184610d1b565b949350505050565b6000602082019050610de56000830184610c47565b92915050565b60006020820190508181036000830152610e0481610c8f565b9050919050565b60006020820190508181036000830152610e2481610cb2565b9050919050565b60006020820190508181036000830152610e4481610cd5565b9050919050565b60006020820190508181036000830152610e6481610cf8565b9050919050565b6000602082019050610e806000830184610d1b565b92915050565b6000610e90610ea1565b9050610e9c828261101c565b919050565b6000604051905090565b600067ffffffffffffffff821115610ec657610ec5611123565b5b610ecf82611166565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610f0382610f9e565b9150610f0e83610f9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f4357610f42611096565b5b828201905092915050565b6000610f5982610f7e565b9050919050565b6000610f6b82610f7e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610fd5578082015181840152602081019050610fba565b83811115610fe4576000848401525b50505050565b6000600282049050600182168061100257607f821691505b60208210811415611016576110156110c5565b5b50919050565b61102582611166565b810181811067ffffffffffffffff8211171561104457611043611123565b5b80604052505050565b600061105882610f9e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561108b5761108a611096565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f596f7520617265206e6f742061626c6520746f2077697468647261772061742060008201527f746869732074696d650000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e20616464206b6964730000000000600082015250565b7f596f75206d75737420626520746865206b696420746f20776974686472617700600082015250565b7f596f752063616e6e6f74207769746864726177207965742e0000000000000000600082015250565b61124a81610f4e565b811461125557600080fd5b50565b61126181610f60565b811461126c57600080fd5b50565b61127881610f72565b811461128357600080fd5b50565b61128f81610f9e565b811461129a57600080fd5b5056fea264697066735822122027edd401a8420b5fa0572d5f7889441eb1dddcbecc584e187f5d09089331a73c64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c806331d575c51461005a57806351cff8d914610083578063722713f71461009f5780637285fd3a146100ca578063a25db8ce1461010c578063f340fa0114610149575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610b37565b610165565b005b61009d60048036038101906100989190610b0a565b610322565b005b3480156100ab57600080fd5b506100b4610510565b6040516100c19190610e6b565b60405180910390f35b3480156100d657600080fd5b506100f160048036038101906100ec9190610bfc565b610518565b60405161010396959493929190610d2a565b60405180910390f35b34801561011857600080fd5b50610133600480360381019061012e9190610add565b6106a1565b6040516101409190610dd0565b60405180910390f35b610163600480360381019061015e9190610add565b610795565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ea90610e0b565b60405180910390fd5b60016040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152602001858152602001848152602001831515815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906102c6929190610976565b5060408201518160020190805190602001906102e3929190610976565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055505050505050505050565b600061032d826107a1565b905060018181548110610343576103426110f4565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d990610e2b565b60405180910390fd5b60011515600182815481106103fa576103f96110f4565b5b906000526020600020906006020160050160009054906101000a900460ff1615151461045b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045290610deb565b60405180910390fd5b6001818154811061046f5761046e6110f4565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600183815481106104ce576104cd6110f4565b5b9060005260206000209060060201600401549081150290604051600060405180830381858888f1935050505015801561050b573d6000803e3d6000fd5b505050565b600047905090565b6001818154811061052857600080fd5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461057190610fea565b80601f016020809104026020016040519081016040528092919081815260200182805461059d90610fea565b80156105ea5780601f106105bf576101008083540402835291602001916105ea565b820191906000526020600020905b8154815290600101906020018083116105cd57829003601f168201915b5050505050908060020180546105ff90610fea565b80601f016020809104026020016040519081016040528092919081815260200182805461062b90610fea565b80156106785780601f1061064d57610100808354040283529160200191610678565b820191906000526020600020905b81548152906001019060200180831161065b57829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16905086565b6000806106ad836107a1565b9050600181815481106106c3576106c26110f4565b5b9060005260206000209060060201600301544211610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d90610e4b565b60405180910390fd5b6001818154811061072a576107296110f4565b5b90600052602060002090600602016003015442111561078a576001808281548110610758576107576110f4565b5b906000526020600020906006020160050160006101000a81548160ff0219169083151502179055506001915050610790565b60009150505b919050565b61079e81610857565b50565b600080600090505b60018054905081101561084b578273ffffffffffffffffffffffffffffffffffffffff16600182815481106107e1576107e06110f4565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108385780915050610852565b80806108439061104d565b9150506107a9565b506103e790505b919050565b60005b600180549050811015610972578173ffffffffffffffffffffffffffffffffffffffff1660018281548110610892576108916110f4565b5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561095f5734600182815481106108f5576108f46110f4565b5b906000526020600020906006020160040160008282546109159190610ef8565b925050819055507fdfa390b0c1c515579c441209b0f88953b3383e444305380136073b84d9ae5eaf8234610947610510565b60405161095693929190610d99565b60405180910390a15b808061096a9061104d565b91505061085a565b5050565b82805461098290610fea565b90600052602060002090601f0160209004810192826109a457600085556109eb565b82601f106109bd57805160ff19168380011785556109eb565b828001600101855582156109eb579182015b828111156109ea5782518255916020019190600101906109cf565b5b5090506109f891906109fc565b5090565b5b80821115610a155760008160009055506001016109fd565b5090565b6000610a2c610a2784610eab565b610e86565b905082815260208101848484011115610a4857610a47611157565b5b610a53848285610fa8565b509392505050565b600081359050610a6a81611241565b92915050565b600081359050610a7f81611258565b92915050565b600081359050610a948161126f565b92915050565b600082601f830112610aaf57610aae611152565b5b8135610abf848260208601610a19565b91505092915050565b600081359050610ad781611286565b92915050565b600060208284031215610af357610af2611161565b5b6000610b0184828501610a5b565b91505092915050565b600060208284031215610b2057610b1f611161565b5b6000610b2e84828501610a70565b91505092915050565b60008060008060008060c08789031215610b5457610b53611161565b5b6000610b6289828a01610a70565b965050602087013567ffffffffffffffff811115610b8357610b8261115c565b5b610b8f89828a01610a9a565b955050604087013567ffffffffffffffff811115610bb057610baf61115c565b5b610bbc89828a01610a9a565b9450506060610bcd89828a01610ac8565b9350506080610bde89828a01610ac8565b92505060a0610bef89828a01610a85565b9150509295509295509295565b600060208284031215610c1257610c11611161565b5b6000610c2084828501610ac8565b91505092915050565b610c3281610f60565b82525050565b610c4181610f4e565b82525050565b610c5081610f72565b82525050565b6000610c6182610edc565b610c6b8185610ee7565b9350610c7b818560208601610fb7565b610c8481611166565b840191505092915050565b6000610c9c602983610ee7565b9150610ca782611177565b604082019050919050565b6000610cbf601b83610ee7565b9150610cca826111c6565b602082019050919050565b6000610ce2601f83610ee7565b9150610ced826111ef565b602082019050919050565b6000610d05601883610ee7565b9150610d1082611218565b602082019050919050565b610d2481610f9e565b82525050565b600060c082019050610d3f6000830189610c29565b8181036020830152610d518188610c56565b90508181036040830152610d658187610c56565b9050610d746060830186610d1b565b610d816080830185610d1b565b610d8e60a0830184610c47565b979650505050505050565b6000606082019050610dae6000830186610c38565b610dbb6020830185610d1b565b610dc86040830184610d1b565b949350505050565b6000602082019050610de56000830184610c47565b92915050565b60006020820190508181036000830152610e0481610c8f565b9050919050565b60006020820190508181036000830152610e2481610cb2565b9050919050565b60006020820190508181036000830152610e4481610cd5565b9050919050565b60006020820190508181036000830152610e6481610cf8565b9050919050565b6000602082019050610e806000830184610d1b565b92915050565b6000610e90610ea1565b9050610e9c828261101c565b919050565b6000604051905090565b600067ffffffffffffffff821115610ec657610ec5611123565b5b610ecf82611166565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610f0382610f9e565b9150610f0e83610f9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f4357610f42611096565b5b828201905092915050565b6000610f5982610f7e565b9050919050565b6000610f6b82610f7e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610fd5578082015181840152602081019050610fba565b83811115610fe4576000848401525b50505050565b6000600282049050600182168061100257607f821691505b60208210811415611016576110156110c5565b5b50919050565b61102582611166565b810181811067ffffffffffffffff8211171561104457611043611123565b5b80604052505050565b600061105882610f9e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561108b5761108a611096565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f596f7520617265206e6f742061626c6520746f2077697468647261772061742060008201527f746869732074696d650000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e20616464206b6964730000000000600082015250565b7f596f75206d75737420626520746865206b696420746f20776974686472617700600082015250565b7f596f752063616e6e6f74207769746864726177207965742e0000000000000000600082015250565b61124a81610f4e565b811461125557600080fd5b50565b61126181610f60565b811461126c57600080fd5b50565b61127881610f72565b811461128357600080fd5b50565b61128f81610f9e565b811461129a57600080fd5b5056fea264697066735822122027edd401a8420b5fa0572d5f7889441eb1dddcbecc584e187f5d09089331a73c64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/CryptoKids.sol:CryptoKids",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 37,
        "contract": "contracts/CryptoKids.sol:CryptoKids",
        "label": "kids",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Kid)33_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Kid)33_storage)dyn_storage": {
        "base": "t_struct(Kid)33_storage",
        "encoding": "dynamic_array",
        "label": "struct CryptoKids.Kid[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Kid)33_storage": {
        "encoding": "inplace",
        "label": "struct CryptoKids.Kid",
        "members": [
          {
            "astId": 22,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "walletAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 24,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "firstName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 26,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "lastName",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 28,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "releaseTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 30,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "amount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/CryptoKids.sol:CryptoKids",
            "label": "canWithdraw",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}